{"version":3,"sources":["config/apiUrl.js","pages/Login.js","pages/AddArticle.js","pages/ArticleList.js","pages/home.js","pages/LeftWord.js","pages/AdminIndex.js","pages/Router.js","index.js"],"names":["ipUrl","servicePath","checkLogin","getType","addArticle","updateArticle","getArticlelist","delArticle","getArticleById","isLogin","getBooks","addBooks","Login","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","history","useHistory","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","UserOutlined","type","color","onChange","e","target","value","Password","KeyOutlined","block","onClick","setTimeout","message","error","test","dataProps","axios","method","url","data","withCredentials","then","res","console","log","openId","localStorage","setItem","push","catch","err","Option","Select","TextArea","Input","AddArticle","props","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","bookInfo","setBookInfo","selectedType","setSelectType","selectedBook","setSelectBook","addBook","setAddBook","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","onBookInputChange","input","addBookClick","header","useEffect","removeItem","tmpId","match","params","article_content","introduce","tmpInt","addTime","typeId","gutter","span","defaultValue","map","item","index","typename","rows","onPressEnter","dangerouslySetInnerHTML","__html","type_id","book_id","datetext","replace","Date","getTime","view_count","Math","ceil","random","insertId","isScuccess","success","date","dateString","dropdownRender","menu","margin","display","flexWrap","padding","flex","cursor","PlusOutlined","bookname","confirm","Modal","ArticleList","list","setList","getList","dataSource","renderItem","Item","typeName","content","onOk","onCancel","Home","Header","Layout","Content","Footer","Sider","AdminIndex","collapsed","setCollapsed","defaultMenukey","setDefaultMenukey","menuName","setMenuName","location","pathname","route","minHeight","collapsible","onCollapse","theme","selectedKeys","mode","onSelect","key","PieChartOutlined","UnorderedListOutlined","DesktopOutlined","FileOutlined","background","path","exact","component","LeftWord","textAlign","Approuter","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f7fbb93.chunk.js","sourcesContent":["//let ipUrl = \"http://127.0.0.1:7001/admin/\";\r\nlet ipUrl=\"http://47.97.26.45:7001/admin/\"\r\nlet servicePath = {\r\n    checkLogin : ipUrl+'checkLogin',// 首页接口\r\n    getType : ipUrl+'getType',// 分类接口\r\n    addArticle:ipUrl + 'addArticle' , // 添加文章\r\n    updateArticle:ipUrl + 'updateArticle' , // 多次添加文章\r\n    getArticlelist:ipUrl + 'getArticlelist',// 获取文章列表\r\n    delArticle:ipUrl + 'delArticle/' ,  // 删除文章\r\n    getArticleById:ipUrl + 'getArticleById/' ,  // 根据ID获得文章详情\r\n    isLogin:ipUrl+ 'isLogin',// 判断用户是否登录的接口\r\n    getBooks:ipUrl+ 'getBooks',//获取小册列表\r\n    addBooks:ipUrl+ 'addBooks',//添加小册\r\n}\r\n\r\nexport default servicePath","import React, { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../statics/css/pages/login.css';\r\nimport { Card, Input, Button, Spin, message } from 'antd';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport servicePath from '../config/apiUrl';\r\nimport axios from 'axios';\r\nfunction Login() {\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    let history = useHistory()\r\n    const checkLogin = () => {\r\n        setIsLoading(true)\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1000)\r\n        if (!userName) {\r\n            message.error('用户名不能为空')\r\n            return false\r\n        } \r\n        else if (!/^[A-Za-z0-9]+$/.test(userName)) {\r\n            message.error(\"用户名只有英文大小写和数字字符\")\r\n            return false\r\n        }\r\n        else if (!password) {\r\n            message.error('密码不能为空')\r\n            return false\r\n        }\r\n        else if (!/^[a-zA-Z0-9_]+$/.test(password)) {\r\n            message.error('密码只能包含数字英文字母与下划线')\r\n            return false\r\n        }\r\n        else {\r\n            let dataProps = {\r\n                'userName': userName,\r\n                'password': password\r\n            }\r\n            axios({\r\n                method: 'post',\r\n                url: servicePath.checkLogin,\r\n                data: dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res => {\r\n                    setIsLoading(false)\r\n                    if (res.data.data === '登录成功') {\r\n                        console.log(res.data.openId)\r\n                        localStorage.setItem('openId', res.data.openId)\r\n                        history.push('/adminIndex')\r\n                    } else {\r\n                        message.error('用户名密码错误')\r\n                    }\r\n                }\r\n            ).catch(err => {\r\n                console.log(err)\r\n                message.error('登录失败')\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                <Card title=\"Berwin Blog  System\" bordered={true} style={{ width: 400 }} >\r\n                    <Input\r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your userName\"\r\n                        prefix={<UserOutlined type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        onChange={(e) => { setUserName(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Input.Password\r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                        prefix={<KeyOutlined type=\"key\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport marked from 'marked';\r\nimport '../statics/css/pages/addArticle.css';\r\nimport { Row, Col, Input, Select, Button, DatePicker, message,Divider } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport servicePath from '../config/apiUrl'\r\nimport { useHistory } from 'react-router';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nfunction AddArticle(props) {\r\n    const history = useHistory()\r\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle, setArticleTitle] = useState('') //文章标题\r\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('') //html内容\r\n    const [introducemd, setIntroducemd] = useState() //简介的markdown内容\r\n    const [introducehtml, setIntroducehtml] = useState('') //简介的html内容\r\n    const [showDate, setShowDate] = useState()   //发布日期\r\n    //const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n    const [bookInfo, setBookInfo] = useState([]) // 文章小册类型\r\n    const [selectedType, setSelectType] = useState(1) //选择的文章类别\r\n    const [selectedBook, setSelectBook] = useState()//选择的小册类型\r\n    const [addBook,setAddBook] = useState()//添加的小册类型\r\n    marked.setOptions({\r\n        renderer: marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n    });\r\n    const changeContent = (e) => {\r\n        setArticleContent(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setMarkdownContent(html)\r\n    }\r\n    const changeIntroduce = (e) => {\r\n        setIntroducemd(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setIntroducehtml(html)\r\n    }\r\n    const getTypeInfo = () => {\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: servicePath.getType,\r\n            header: { 'Access-Control-Allow-Origin': '*' },\r\n            withCredentials: true\r\n        }).then(\r\n            res => {\r\n                if (res.data.data === \"没有登录\") {\r\n                    localStorage.removeItem('openId')\r\n                    history.push('/login')\r\n                } else {\r\n                    setTypeInfo(res.data.data)\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n    const getBookInfo = ()=>{\r\n        axios({\r\n            method: 'get',\r\n            url: servicePath.getBooks,\r\n            header: { 'Access-Control-Allow-Origin': '*' },\r\n            withCredentials: true\r\n        }).then(\r\n            res => {\r\n                if (res.data.data === \"没有登录\") {\r\n                    localStorage.removeItem('openId')\r\n                    history.push('/login')\r\n                } else {\r\n                    setBookInfo(res.data.data)\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n    const selectTypeHandler = (value) => {\r\n        setSelectType(value)\r\n    }\r\n    const selectBookHandler = (value) => {\r\n        setSelectBook(value)\r\n    }\r\n    const onBookInputChange =  (input) =>{\r\n        setAddBook(input.target.value)\r\n    }\r\n    const addBookClick = ()=>{\r\n        if(!addBook){\r\n            message.error('小册名称不能为空')\r\n            return false\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: servicePath.addBooks,\r\n            header: { 'Access-Control-Allow-Origin': '*' },\r\n            withCredentials: true,\r\n           data:{\r\n                addBook\r\n            }\r\n        }).then(\r\n            res => {\r\n                console.log(res)\r\n            }\r\n        )\r\n        setAddBook()\r\n    }\r\n    const getArticleById = (id) => {\r\n        axios(servicePath.getArticleById + id, {\r\n            withCredentials: true,\r\n            header: { 'Access-Control-Allow-Origin': '*' }\r\n        }).then(\r\n            res => {\r\n                setArticleTitle(res.data.data[0].title)\r\n                setArticleContent(res.data.data[0].article_content)\r\n                let html = marked(res.data.data[0].article_content)\r\n                setMarkdownContent(html)\r\n                setIntroducemd(res.data.data[0].introduce)\r\n                let tmpInt = marked(res.data.data[0].introduce)\r\n                setIntroducehtml(tmpInt)\r\n                setShowDate(res.data.data[0].addTime)\r\n                setSelectType(res.data.data[0].typeId)\r\n\r\n            }\r\n        )\r\n    }\r\n    const saveArticle = () => {\r\n        if (!selectedType) {\r\n            message.error('必须选择文章类别')\r\n            return false\r\n        } else if (!articleTitle) {\r\n            message.error('文章名称不能为空')\r\n            return false\r\n        } else if (!articleContent) {\r\n            message.error('文章内容不能为空')\r\n            return false\r\n        } else if (!introducemd) {\r\n            message.error('简介不能为空')\r\n            return false\r\n        } else if (!showDate) {\r\n            message.error('发布日期不能为空')\r\n            return false\r\n        } else if (!selectedBook){\r\n            message.error('请选择文章的小册')\r\n            return false\r\n        }\r\n        let dataProps = {}   //传递到接口的参数\r\n        dataProps.type_id = selectedType\r\n        dataProps.title = articleTitle\r\n        dataProps.article_content = articleContent\r\n        dataProps.introduce = introducemd\r\n        dataProps.book_id=selectedBook\r\n        let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\r\n        dataProps.addTime = (new Date(datetext).getTime()) / 1000\r\n        if (articleId === 0) {\r\n            console.log('articleId=' + articleId)\r\n            dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\r\n            axios({\r\n                method: 'post',\r\n                url: servicePath.addArticle,\r\n                data: dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res => {\r\n                    setArticleId(res.data.insertId)\r\n                    if (res.data.isScuccess) {\r\n                        message.success('文章保存成功')\r\n                    } else {\r\n                        message.error('文章保存失败');\r\n                    }\r\n                }\r\n            )\r\n        } else {\r\n            dataProps.id = articleId\r\n            axios({\r\n                method: 'post',\r\n                url: servicePath.updateArticle,\r\n                header: { 'Access-Control-Allow-Origin': '*' },\r\n                data: dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res => {\r\n                    if (res.data.isScuccess) {\r\n                        message.success('文章保存成功')\r\n                    } else {\r\n                        message.error('保存失败');\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getTypeInfo()\r\n        getBookInfo()\r\n        //获得文章ID\r\n        let tmpId = props.match.params.id\r\n        if (tmpId) {\r\n            setArticleId(tmpId)\r\n            getArticleById(tmpId)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                <Col span={18}>\r\n                    <Row gutter={10} >\r\n                        <Col span={20}>\r\n                            <Input\r\n                                value={articleTitle}\r\n                                placeholder=\"博客标题\"\r\n                                size=\"large\"\r\n                                onChange={e => {\r\n                                    setArticleTitle(e.target.value)\r\n                                }} />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            &nbsp;\r\n                            <Select defaultValue={\"技术博客\"} size=\"large\" onChange={selectTypeHandler}>\r\n                                {\r\n                                    typeInfo.map((item, index) => {\r\n                                        return (<Option key={index} value={item.id}>{item.typename}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={10} >\r\n                        <Col span={12}>\r\n                            <TextArea\r\n                                className=\"markdown-content\"\r\n                                rows={35}\r\n                                placeholder=\"文章内容\"\r\n                                onChange={changeContent}\r\n                                onPressEnter={changeContent}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div\r\n                                className=\"show-html\"\r\n                                dangerouslySetInnerHTML={{ __html: markdownContent }}>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Button size=\"large\">暂存文章</Button>&nbsp;\r\n                            <Button type=\"primary\" size=\"large\" onClick={saveArticle}>发布文章</Button>\r\n                            <br />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <br />\r\n                            <TextArea\r\n                                rows={4}\r\n                                placeholder=\"文章简介\"\r\n                                onChange={changeIntroduce}\r\n                                onPressEnter={changeIntroduce}\r\n                            />\r\n                            <br /><br />\r\n                            <div\r\n                                className=\"introduce-html\"\r\n                                dangerouslySetInnerHTML={{ __html: '文章简介：' + introducehtml }}>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"date-select\">\r\n                                <DatePicker\r\n                                    onChange={(date, dateString) => setShowDate(dateString)}\r\n                                    placeholder=\"发布日期\"\r\n                                    size=\"large\"\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"artical-book\">\r\n                                &nbsp;\r\n                                <Select  style={{width:'80%'}} defaultValue={\"选择小册\"} size=\"large\" onChange={selectBookHandler}\r\n                                dropdownRender={menu => (\r\n                                    <div>\r\n                                      {menu}\r\n                                      <Divider style={{ margin: '4px 0' }} />\r\n                                      <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\r\n                                        <Input style={{ flex: 'auto' }} value={addBook} onChange={onBookInputChange} />\r\n                                        <a\r\n                                          style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\r\n                                          onClick={addBookClick}\r\n                                        >\r\n                                          <PlusOutlined /> 添加小册\r\n                                        </a>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}>\r\n                                    {\r\n                                        bookInfo.map((item, index) => {\r\n                                            return (<Option key={index} value={item.id}>{item.bookname}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle","import React, { useState, useEffect } from 'react';\r\nimport '../statics/css/pages/ArticleList.css';\r\nimport { List, Row, Col, Modal, message, Button} from 'antd';\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\nimport { useHistory } from 'react-router-dom'\r\nconst { confirm } = Modal;\r\nfunction ArticleList(props) {\r\n    const [list, setList] = useState([])\r\n    const history = useHistory()\r\n    const getList = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: servicePath.getArticlelist,\r\n            withCredentials: true,\r\n            header: { 'Access-Control-Allow-Origin': '*' }\r\n        }).then(\r\n            res => {\r\n                if (res.data.data === \"没有登录\") {\r\n                    localStorage.removeItem('openId')\r\n                    history.push('/login')\r\n                } else {\r\n                    console.log(res.data)\r\n                    setList(res.data.list)\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const updateArticle = (id, checked) => {\r\n        history.push('/adminIndex/addArticle/' + id)\r\n    }\r\n    const delArticle = (id) => {\r\n        confirm({\r\n            title: '确定要删除这篇博客文章吗?',\r\n            content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\r\n            onOk() {\r\n                axios(servicePath.delArticle + id, { withCredentials: true }).then(\r\n                    res => {\r\n                        message.success('文章删除成功')\r\n                        getList()\r\n                    }\r\n                )\r\n            },\r\n            onCancel() {\r\n                message.success('没有任何改变')\r\n            },\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <List\r\n                header={\r\n                    <Row className=\"list-div\">\r\n                        <Col span={8}>\r\n                            <b>标题</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>类别</b>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <b>发布时间</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>浏览量</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>操作</b>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <Row className=\"list-div\">\r\n                            <Col span={8}>\r\n                                {item.title}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.typeName}\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                {item.addTime}\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                {item.view_count}\r\n                            </Col>\r\n\r\n                            <Col span={4}>\r\n                                <Button type=\"primary\" onClick={() => { updateArticle(item.id) }}>修改</Button>&nbsp;\r\n                                <Button onClick={() => { delArticle(item.id) }} >删除 </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ArticleList","const Home=()=>{\r\n    return(\r\n        <div>工作台</div>\r\n    )\r\n}\r\nexport default Home","const Home=()=>{\r\n    return(\r\n        <div>留言管理</div>\r\n    )\r\n}\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport '../statics/css/pages/adminIndex.css';\r\nimport { PieChartOutlined, DesktopOutlined, UnorderedListOutlined, FileOutlined } from '@ant-design/icons'\r\nimport { Route } from 'react-router-dom'\r\nimport AddArticle from './AddArticle'\r\nimport ArticleList from './ArticleList'\r\nimport Home from './home'\r\nimport LeftWord from './LeftWord'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nfunction AdminIndex(props) {\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const [defaultMenukey, setDefaultMenukey] = useState()\r\n  const [menuName, setMenuName] = useState()\r\n  const onCollapse = collapsed => {\r\n    setCollapsed(collapsed)\r\n  };\r\n  useEffect(() => {\r\n    console.log(props.location.pathname)\r\n    const route = props.location.pathname\r\n    if (route === \"/adminIndex/addArticle\") {/**添加文章 */\r\n      setDefaultMenukey(\"addArticle\")\r\n      setMenuName(\"添加文章\")\r\n    } else if (route === \"/adminIndex/articleList\") {/**文章列表 */\r\n      setDefaultMenukey(\"articleList\")\r\n      setMenuName(\"文章列表\")\r\n    } else if (route === \"/adminIndex\") {/**工作台 */\r\n      setDefaultMenukey(\"Home\")\r\n      setMenuName(\"工作台\")\r\n    } else if (route === \"/adminIndex/leftWord\") {/**留言管理 */\r\n      setDefaultMenukey(\"leftWord\")\r\n      setMenuName(\"留言管理\")\r\n    }\r\n  }, [])\r\n  let history = useHistory();\r\n  const handleClickArticle = e => {\r\n    if (e.key === 'addArticle') {/**添加文章 */\r\n      history.push('/adminIndex/addArticle')\r\n      setDefaultMenukey('addArticle')\r\n      setMenuName(\"添加文章\")\r\n    } else if (e.key === 'articleList') {/**文章列表 */\r\n      history.push('/adminIndex/articleList')\r\n      setDefaultMenukey('articleList')\r\n      setMenuName(\"文章列表\")\r\n    } else if (e.key === 'Home') {/**工作台 */\r\n      history.push('/adminIndex')\r\n      setDefaultMenukey('Home')\r\n      setMenuName(\"工作台\")\r\n    } else if (e.key === 'leftWord') {/**留言管理 */\r\n      history.push('/adminIndex/leftWord')\r\n      setDefaultMenukey('leftWord')\r\n      setMenuName(\"留言管理\")\r\n    }\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n        <div className=\"logo\">\r\n          {!collapsed && 'Berwin的博客后台'}\r\n        </div>\r\n        <Menu theme=\"dark\" selectedKeys={[defaultMenukey]} mode=\"inline\" onSelect={handleClickArticle}>\r\n          <Menu.Item key=\"Home\">\r\n            <PieChartOutlined />\r\n            <span>工作台</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"articleList\">\r\n            <UnorderedListOutlined />\r\n            <span>文章列表</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"addArticle\">\r\n            <DesktopOutlined />\r\n            <span>添加文章</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"leftWord\">\r\n            <FileOutlined></FileOutlined>\r\n            <span>留言管理</span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header style={{ background: '#fff', padding: 0 }} />\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n            <Breadcrumb.Item>{menuName}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n            <Route path=\"/adminIndex\" exact component={Home} /> {/**后台的首页 */}\r\n            <Route path=\"/adminIndex/addArticle\" exact component={AddArticle} />{/**添加文章 */}\r\n            <Route path=\"/adminIndex/addArticle/:id\" exact component={AddArticle} />{/**修改文章 */}\r\n            <Route path=\"/adminIndex/articleList\" exact component={ArticleList} />{/**文章列表 */}\r\n            <Route path=\"/adminIndex/leftWord\" exact component={LeftWord} />{/**留言管理 */}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Berwin.com</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default AdminIndex","import { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport React from 'react'\r\nimport Login from './Login'\r\nimport AdminIndex from './AdminIndex'\r\nfunction Approuter() {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/adminIndex\" />\r\n            </Route>\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/adminIndex/\" component={AdminIndex} />\r\n        </Router>\r\n    )\r\n}\r\nexport default Approuter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Approuter from './pages/Router'\nReactDOM.render(\n  <React.StrictMode>\n    <Approuter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}